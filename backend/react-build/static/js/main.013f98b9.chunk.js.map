{"version":3,"sources":["components/MainView.js","util/InputHandler.js","util/GameState.js","util/Drawing.js","components/MenuBar.js","components/About.js","components/Login.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["canvas","MOVE","keyCodeActionMap","keyCodeActionInputMap","gameState","drawCircle","props","ctx","posX","posY","radius","color","beginPath","arc","Math","PI","fillStyle","fill","strokeStyle","stroke","useStyles","makeStyles","root","display","justifyContent","paintBar","flexDirection","alignItems","gap","cursorSize","width","serverAddr","process","SERVER_ADDR","wsEndPoint","WEBSOCKET_ENDPOINT","window","innerWidth","height","innerHeight","wsClient","init","fetchGameState","websockConnStr","concat","console","log","WebSocket","onopen","onmessage","msg","data","JSON","parse","id","postAction","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","action","actionInput","wrap","_context","prev","next","send","stringify","stop","_x","_x2","apply","arguments","draw","key","clearLocalCanvas","hasOwnProperty","ps","fillRect","resizeCanvas","newWidth","newHeight","Canvas","canvasRef","useRef","disableBodyScroll","addEventListener","handleCanvasKeyDown","evt","keyCode","getKeyAction","length","getKeyActionInput","useEffect","_callee5","requestId","render","_context5","current","_ref5","_callee4","_context4","getContext","requestAnimationFrame","abrupt","cancelAnimationFrame","_jsx","children","tabindex","ref","onKeyDown","onMouseDown","getMouseAction","getMouseActionInput","handleCanvasMouseDown","toolBar","selectedItem","backgroundColor","modal","position","top","left","transform","bgcolor","border","boxShadow","p","MenuBar","classes","history","useHistory","gotoLink","path","push","AppBar","_jsxs","Toolbar","className","Typography","Box","fontWeight","fontSize","Button","onClick","avatar","maxWidth","maxHeight","typography","static_gaps","About","Avatar","alt","src","align","href","Login","_useState","useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","pw","setPw","loginButtonPerformed","fetch","method","headers","Accept","body","then","res","text","alert","signUpButtonPerformed","_ref2","_callee2","_context2","Card","sx","minWidth","CardContent","component","m","noValidate","autoComplete","TextField","required","label","value","onChange","e","val","target","type","Profile","message","setMessage","catch","App","Route","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","BrowserRouter","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.013f98b9.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  disableBodyScroll,\n  enableBodyScroll,\n  clearAllBodyScrollLocks,\n} from \"body-scroll-lock\";\nimport { Button, Checkbox, Box, TextField } from \"@material-ui/core\";\nimport {\n  getKeyAction,\n  getKeyActionInput,\n  getMouseAction,\n  getMouseActionInput,\n} from \"../util/InputHandler\";\n\nimport { gameState } from \"../util/GameState\";\nimport { drawCircle } from \"../util/Drawing\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  paintBar: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    gap: \"10px\",\n  },\n  cursorSize: {\n    width: \"60px\",\n  },\n});\n\nconst serverAddr = process.env.SERVER_ADDR || \"gaming.richwhite.net\";\nconst wsEndPoint = process.env.WEBSOCKET_ENDPOINT || \"websocketgame\";\n\nlet width = window.innerWidth - 15;\nlet height = window.innerHeight - 200;\n\nlet wsClient = null;\nlet canvas;\n\nconst init = () => {\n  fetchGameState();\n  const websockConnStr = `wss://${serverAddr}/${wsEndPoint}`;\n  console.log(`Attempting to connect to websocket on: ${websockConnStr}`);\n  wsClient = new WebSocket(websockConnStr);\n\n  wsClient.onopen = () => {\n    console.log(\"WebSocket Client Connected\");\n  };\n\n  wsClient.onmessage = (msg) => {\n    console.log(\"RECVD:\");\n    const data = JSON.parse(msg.data);\n    console.log(data);\n\n    gameState[data.id] = data;\n  };\n};\n\nconst postAction = async (action, actionInput) => {\n  let msg = { action: action, actionInput: actionInput };\n  // console.log(\"POSTING ACTION:\");\n  // console.log(msg);\n  wsClient.send(JSON.stringify(msg));\n};\n\nconst draw = (ctx) => {\n\n  clearLocalCanvas(ctx);\n\n  for (let key in gameState) {\n    if (gameState.hasOwnProperty(key)) {\n      let ps = gameState[key];\n      const props = {\n        ctx: ctx,\n        posX: ps.posX,\n        posY: ps.posY,\n        radius: 5,\n        color: ps.color,\n      };\n      drawCircle(props);\n    }\n  }\n};\n\nconst clearLocalCanvas = (ctx) => {\n  //console.log(\"Clear Canvas called\");\n  ctx.fillStyle = \"white\";\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n};\n\n//\n//\nconst fetchGameState = () => {\n  // const url = `https://gaming.richwhite.net/api/game-state`;\n  // fetch(url, {\n  //   method: \"GET\",\n  // })\n  //   .then((res) => res.json())\n  //   .then((json) => {\n  //     //json.map((a) => diffState.add(a));\n  //     // diffState = json;\n  //   });\n};\n\n//\nconst resizeCanvas = (canvas, newWidth, newHeight) => {\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n  width = newWidth;\n  height = newHeight;\n};\n\n//\nexport const Canvas = () => {\n  const classes = useStyles();\n  const canvasRef = useRef();\n\n  disableBodyScroll(canvasRef);\n  window.addEventListener(\"resize\", resizeCanvas, false);\n\n  //\n  const handleCanvasDown = async (canvas, evt) => {};\n\n  //\n  const handleCanvasUp = (canvas, evt) => {};\n\n  //\n  const handleCanvasMove = async (canvas, evt) => {};\n\n  //\n  const handleCanvasKeyDown = (canvas, evt) => {\n    const action = getKeyAction(evt);\n    if (action.length > 0) {\n      const actionInput = getKeyActionInput(evt);\n      postAction(action, actionInput);\n    }\n  };\n\n  const handleCanvasMouseDown = (canvas, evt) => {\n    //console.log(evt);\n\n    const action = getMouseAction(evt);\n    if (action.length > 0) {\n      const actionInput = getMouseActionInput(evt);\n      postAction(action, actionInput);\n    }\n  };\n\n  //\n  useEffect(async () => {\n    init();\n\n    canvas = canvasRef.current;\n\n    let requestId;\n\n    //render/update method, called on each key frame\n    const render = async () => {\n      const width = window.innerWidth - 15;\n      const height = window.innerHeight - 160;\n      // resizeCanvas(canvas, width, height);\n\n      const ctx = canvas.getContext(\"2d\");\n      draw(ctx);\n      requestId = requestAnimationFrame(render);\n    };\n\n    await render();\n    return () => {\n      cancelAnimationFrame(requestId);\n    };\n  });\n\n  //\n  return (\n    <div>\n      <canvas\n        tabindex=\"1\"\n        ref={canvasRef}\n        width={width}\n        height={height}\n        onKeyDown={(evt) => handleCanvasKeyDown(canvas, evt)}\n        onMouseDown={(evt) => handleCanvasMouseDown(canvas, evt)}\n      />\n    </div>\n  );\n};\n","const MOVE = \"MV\";\nconst JUMP = \"JMP\";\nconst ATTACK = \"ATK\";\nconst BLOCK = \"BLK\";\n\nconst UP = \"U\";\nconst DOWN = \"D\";\nconst LEFT = \"L\";\nconst RIGHT = \"R\";\n\nconst keyCodeActionMap = {\n  38: MOVE, // ArrowUp\n  40: MOVE, // ArrowDown\n  37: MOVE, // ArrowLeft\n  39: MOVE, // ArrowRight\n  87: MOVE, // w\n  83: MOVE, // s\n  65: MOVE, // a\n  68: MOVE, // d\n};\n\nconst keyCodeActionInputMap = {\n  38: UP, // ArrowUp\n  40: DOWN, // ArrowDown\n  37: LEFT, // ArrowLeft\n  39: RIGHT, // ArrowRight\n  87: UP, // w\n  83: DOWN, // s\n  65: LEFT, // a\n  68: RIGHT, // d\n};\n\nexport const getKeyAction = (evt) => {\n  if (evt.keyCode in keyCodeActionMap) {\n    return keyCodeActionMap[evt.keyCode];\n  } else return \"\";\n};\n\nexport const getKeyActionInput = (evt) => {\n  if (evt.keyCode in keyCodeActionInputMap) {\n    return keyCodeActionInputMap[evt.keyCode];\n  } else return \"\";\n};\n\nexport const getMouseAction = (evt) => {\n  \n};\n\nexport const getMouseActionInput = (evt) => {};\n","export const gameState = {};\n","export const drawCircle = (props) => {\n  const { ctx, posX, posY, radius, color } = props;\n\n  ctx.beginPath();\n  ctx.arc(posX, posY, radius, 0, 2 * Math.PI);\n  ctx.fillStyle = color;\n  ctx.fill();\n  ctx.strokeStyle = color;\n  ctx.stroke();\n};\n\nexport const drawBezier = (props) => {\n  const { ctx, posX, posY, radius, color } = props;\n\n  ctx.beginPath();\n  ctx.arc(posX, posY, radius, 0, 2 * Math.PI);\n  ctx.fillStyle = color;\n  ctx.fill();\n  ctx.strokeStyle = color;\n  ctx.stroke();\n};\n\nexport const getRandomColor = () => {\n  return `rgb(${255 * Math.random()}, ${255 * Math.random()},${\n    255 * Math.random()\n  })`;\n};\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { clearCanvas } from \"./MainView\";\n\nconst useStyles = makeStyles({\n  toolBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  selectedItem: {\n    color: \"blue\",\n    backgroundColor: \"gray\",\n  },\n\n  modal: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 400,\n    bgcolor: \"background.paper\",\n    border: \"2px solid #000\",\n    boxShadow: 24,\n    p: 4,\n  },\n});\n\nexport const MenuBar = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const gotoLink = (path) => history.push(path);\n\n  return (\n    <div>\n      <AppBar position=\"static\" color=\"inherit\">\n        <Toolbar className={classes.toolBar}>\n          <Typography>\n            <Box fontWeight=\"600\" fontSize={24}>\n              RPG!\n            </Box>\n          </Typography>\n\n          <Button color=\"inherit\" onClick={() => gotoLink(\"\")}>\n            Home\n          </Button>\n\n          <Button color=\"inherit\" onClick={() => gotoLink(\"/about\")}>\n            About\n          </Button>\n\n          <Button color=\"inherit\" onClick={() => gotoLink(\"/profile\")}>\n            Profile\n          </Button>\n\n          <Button color=\"inherit\" onClick={() => gotoLink(\"/login\")}>\n            Login\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  avatar: {\n    width: \"20vw\",\n    height: \"20vw\",\n    maxWidth: \"200px\",\n    maxHeight: \"200px\",\n  },\n  typography: {\n    width: \"70vw\",\n  },\n  gap: {\n    width: \"5vw\",\n  },\n  static_gaps: {\n    width: \"50px\",\n  },\n});\n\nconst About = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.gap}></div>\n      <Avatar className={classes.avatar} alt=\"RW\" src=\"aboutme.png\" />\n      <div className={classes.gap} />\n      <Typography className={classes.typography} align={\"justify\"}>\n        Hello! My name is Richard White. I am a software and data engineer based\n        out of NJ. Computer science, education, and art are a few of my passions\n        I wanted to to bring together in this fun project. While this site is\n        still in very early development, I plan to incorporate more interaction,\n        support and new features/variants. If you have any questions or comments\n        you can reach me at: <br />\n        <a href=\"mailto:therichphysicist@gmail.com\">\n          therichphysicist@gmail.com\n        </a>\n        <br />\n        Thanks and enjoy!\n      </Typography>\n      <div className={classes.gap} />\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Box, TextField, Button, Card, CardContent } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    top: \"33%\",\n    left: \"33%\",\n    position: \"absolute\",\n  },\n});\n\nconst Login = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const gotoLink = (path) => history.push(path);\n\n  const [userName, setUserName] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n\n  const updateUserName = (e) => {\n    const val = e.target.value;\n    setUserName(val);\n  };\n\n  const updatePw = (e) => {\n    const val = e.target.value;\n    setPw(val);\n  };\n\n  const loginButtonPerformed = async () => {\n    console.log(userName);\n    console.log(pw);\n\n    fetch(\"https://gaming.richwhite.net/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ userName: userName, pw: pw }),\n    })\n      .then((res) => res.text())\n      .then((text) => {\n        alert(text);\n        gotoLink(\"/profile\");\n      });\n  };\n\n  const signUpButtonPerformed = async () => {\n    console.log(userName);\n    console.log(pw);\n\n    fetch(\"https://gaming.richwhite.net/auth/sign-up\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ userName: userName, pw: pw }),\n    })\n      .then((res) => res.text())\n      .then((text) => {\n        alert(text);\n      });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Card sx={{ minWidth: 275 }}>\n        <CardContent>\n          <Box\n            component=\"form\"\n            sx={{\n              \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n            }}\n            noValidate\n            autoComplete=\"off\"\n          >\n            <div>\n              <TextField\n                required\n                id=\"filled-required\"\n                label=\"User\"\n                value={userName}\n                onChange={updateUserName}\n              />\n            </div>\n\n            <div>\n              <TextField\n                id=\"filled-password-input\"\n                label=\"Password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                value={pw}\n                onChange={updatePw}\n              />\n            </div>\n\n            <div>\n              <Button onClick={() => loginButtonPerformed()}>Log In</Button>\n            </div>\n\n            <div>\n              <Button onClick={() => signUpButtonPerformed()}>Sign Up</Button>\n            </div>\n          </Box>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Box, TextField, Button, Card, CardContent } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\n\nconst useStyles = makeStyles({\n  root: {\n    // display: \"flex\",\n    // top: \"33%\",\n    // left: \"33%\",\n    // position: \"absolute\",\n  },\n});\n\nconst Profile = () => {\n  const classes = useStyles();\n\n  const [message, setMessage] = useState(\"\");\n\n  const getServerMessage = () => {\n    fetch(\"https://gaming.richwhite.net/player/\")\n      .then((res) => res.text())\n      .then((text) => setMessage(text))\n      .catch((e) => console.log(e));\n  };\n\n  useEffect(() => getServerMessage());\n\n  return <div className={classes.root}>{message}</div>;\n};\n\nexport default Profile;\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Canvas } from \"./components/MainView\";\nimport { MenuBar } from \"./components/MenuBar\";\nimport About from \"./components/About\";\nimport Login from \"./components/Login\";\nimport Profile from \"./components/Profile\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MenuBar />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/login\" component={Login} />\n      <Route path = \"/profile\" component = {Profile} />\n      <Route exact path=\"/\" component={Canvas} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { CookiesProvider } from \"react-cookie\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <CookiesProvider>\n        <App />\n      </CookiesProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}